iNSTALL LATEST KERNAL
	list installed kernal
	dpkg --list | grep linux-image
	
	open sources file (repo)
	sudo nano /etc/apt/sources.list
	
	add kernal repo (this is one of many avaialbe repos for kernal)
	deb http://deb.debian.org/debian bullseye-backports main
	
	update the package list and downlaod/install the kernal. 
	
	sudo apt update
	sudo apt install -t bullseye-backports linux-image-amd64
	

INSTALL NEMO

	sudo apt install nemo

CLOUDFLAIRE
	(UBUNTU/MINT)
		Ubuntu
		The supported releases are:

			Noble (24.04)
			Jammy (22.04)
			Focal (20.04)

		Older builds exist for:

			Bionic (18.04)
			Xenial (16.04)

		# Add cloudflare gpg key
		curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg


		# Add this repo to your apt repositories
		echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list


		# Install
		sudo apt-get update && sudo apt-get install cloudflare-warp
				
	(DEBIAN)
		The supported releases are:

			Bookworm (12)
			Bullseye (11)
			Buster (10)

		Older builds exist for:

			Stretch (9)

		# Add cloudflare gpg key
		curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg


		# Add this repo to your apt repositories
		echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list


		# Install
		sudo apt-get update && sudo apt-get install cloudflare-warp
				


KERNAL VERSION
	uname -r


SCREEN MIRRORING USING X11VNC

	sudo apt install x11vnc
	
	Set a password for security 
	x11vnc -storepasswd
	
	start the screen sharing SERVER
	x11vnc -ncache 20 -display :0 -rfbauth ~/.vnc/passwd -forever
	(what it does -display :0 means it shares your current desktop.
	-rfbauth ~/.vnc/passwd uses the password you just set.
	-forever keeps the server running even if someone disconnects.)

	find your ip address 
	ip addr show 
	(Look for a line that says inet followed by numbers like 192.168.1.100. It’ll be under something like eth0 (for wired) or wlan0 (for Wi-Fi))
	
	Add x11vnc to Startup: (FOR ANTIX :- CONTROL CENTER > SESSION > USER DESKTOP SESSON AND ADD THIS LINE AT THE BOTTOM)
	In the new window that appears, switch to the Startup tab.
	
	on the other dievice download a vnc client or realvnc viewer for iphone and then enter the ipaddress and port which is usually 5900, or 5901 ..02.
	
HOW TO AUTO START SOMETHING ON ANTIX

	Step-by-Step Guide
	Open the antiX Control Centre:
	Click on the menu button in the bottom-left corner of your screen (it might look like a grid or a logo, depending on your setup).

	Go to Applications > System Tools > Control Centre.

	Navigate to Session Settings:
	In the Control Centre window, look for the Session tab and click on it.

	Find an option called User Desktop-Session or Edit Login Options and click on it to open the session settings.

	Click the Add button (it might be a “+” sign or labeled as “Add”) to create a new startup command.

	In the command field that pops up, type or paste the following:

FIX AUDIO ON LINUX 

FIXING DEPENDENCIES ON LINUX 

	sudo apt install -f
	
		The command sudo apt install -f on Linux, specifically on Debian-based systems like Ubuntu, is used to fix broken or missing dependencies for installed packages. Here's a breakdown of what it does:
		apt install -f:
		The -f flag stands for "fix." It tells apt (the Advanced Package Tool) to attempt to resolve and fix issues related to broken dependencies.

		It scans the system for packages that are in a broken state (e.g., packages that were partially installed or have unmet dependencies).

		It then tries to install any missing dependencies or remove problematic packages to restore a consistent state.

BLUETOOTH ON ANTIX
	FIXING BLUETOOTH FOR ANTIX 

	first check MENU > APPLICATION > PREFERENCE > BLUETOOTH MANAGER
	sudo apt update && sudo apt install bluez blueman pulseaudio-module-bluetooth

	turn on bluetooth within connman from the technologies tab
	
	installing necessary bluetooth packages 
	bluez, clueman, pluseaudio-module-module 
	sudo apt update && sudo apt install bluez blueman pulseaudio-module-bluetooth
	


BATTERY LIMITER
1. Find out your ASUS' laptop battery name.

Let's start by figuring out the battery name for your ASUS laptop. This can be done by using the following command:

ls /sys/class/power_supply

This command should output something like this:

AC0  BAT0

2. Create a systemd service to set the battery charge stop threshold on boot.

Before creating the systemd service, check if your laptop actually has charge_control_end_threshold in /sys/class/power_supply/BAT* (without it, this won't work):

ls /sys/class/power_supply/BAT*/charge_control_end_threshold

If this command returns the path to charge_control_end_threshold, then your ASUS notebook supports limiting battery charging. If the command returns an error, saying there's no such file or directory, then your laptop doesn't support setting a charge threshold.

If your ASUS laptop has this file, we can continue. Create a file which we'll call battery-charge-threshold.service in /etc/systemd/system.

You can open this file with your default console text editor using:

sudo editor /etc/systemd/system/battery-charge-threshold.service

Or use Gedit or whatever graphical editor you want to use (e.g. for Gedit to open this file as root: gedit admin:///etc/systemd/system/battery-charge-threshold.service)

In this file you'll need to paste the following:

[Unit]
Description=Set the battery charge threshold
After=multi-user.target

StartLimitBurst=0
[Service]
Type=oneshot
Restart=on-failure

ExecStart=/bin/bash -c 'echo CHARGE_STOP_THRESHOLD > /sys/class/power_supply/BATTERY_NAME/charge_control_end_threshold'
[Install]
WantedBy=multi-user.target

Here, change BATTERY_NAME with the name of the battery (BAT0, BAT1 or BATT), and CHARGE_STOP_THRESHOLD with the battery charge stop threshold you want to use (ranging between 1 and 100). Note that I've read that one user couldn't set the charge threshold to any value, but only to 60, 80 and 100.

3. Enable and start the battery-charge-threshold systemd service.

Now let's enable and start the newly created battery-charge-threshold systemd service:

sudo systemctl enable battery-charge-threshold.service
sudo systemctl start battery-charge-threshold.service

With systemd 220, it's possible to enable and start a service directly using systemctl enable --now, but I prefer to use 2 commands in case some readers use an older systemd version.

If you want to change the battery charge stop threshold level, you'll need to edit the /etc/systemd/system/battery-charge-threshold.service file, and change the number from the ExecStart line (after echo) to the new value you want to use, then reload systemd (because the file contents have changed) and restart the systemd service using the following commands:

sudo systemctl daemon-reload
sudo systemctl restart battery-charge-threshold.service


4. Verify that the battery charge stop threshold is working.

If your ASUS laptop supports it, the battery charging limit should now be set to the value you've used in step 2.

You can check this by charging your laptop to the threshold set in battery-charge-threshold.service, and then use this command:

cat /sys/class/power_supply/BATTERY_NAME/status

Replace BATTERY_NAME with the name of the battery, as explained under step 1.

If the battery charge stop threshold is working, the command should show the following output:

Not Charging

If it says "Discharging", make sure your ASUS laptop is actually on AC power, and not running on battery. However, if it says "Charging", well... then your laptop is charging past the charge stop threshold, so this is not working for you, either because your ASUS laptop doesn't support it (which is weird if you have charge_control_end_threshold as mentioned in step 2), you're using a Linux version that's too old for limiting battery charging on your ASUS notebook, or because of human error 😁️.

Extra: In case you don't use systemd, you can also do this by using cron, by running sudo crontab -e and then pasting the following line (this is a single line, triple-click the line to select the whole line), although this is not reliable in all cases from what I've read (I'm not sure why):

@reboot echo CHARGE_STOP_THRESHOLD > /sys/class/power_supply/BATTERY_NAME/charge_control_end_threshold

Replacing CHARGE_STOP_THRESHOLD with the battery charge stop threshold you want to use and BATTERY_NAME with the battery name as seen in step 1.

Why use a systemd service or a cron job? According to u/esrevartb, from whom I've adapted these instructions, "it seems the udev rule isn't working either because the battery sysfs path isn't yet initialized when the rule gets applied, or because this specific charge_control_end_threshold attribute cannot be modified this way".

[[Edit] To easily set a charge threshold for ASUS laptops (automatic setup of the systemd service and the ability to change the charge threshold using a command), as well as check the current charging threshold, see bat.



TLP - POWER MANAGEMENT REPO AND LATEST

        sudo add-apt-repository ppa:linrunner/tlp
    sudo apt update
    sudo apt install tlp tlp-rdw

    sudo tlp start

    tlp battery limiter

    sudo xed /etc/tlp.conf

    search for #STOP_CHARGE_THRESH_BAT1=80 and then uncoommennt it using where was shortcut, i think its crtl q or crtl w

    restart teh tlp service 
    sudo systemctl restart tlp


GEEKBENCH

    download from 
    https://www.geekbench.com/download/linux/

    extract from zip and then open terminal from the extracted folder and then:    
        
    run without installing 
    ./geekbench



REDSHIFT
    
    nano ~/.config/redshift.conf

[redshift]
location-provider=manual
adjustment-method=randr

[manual]
lat=0
lon=0

    killall redshift

    redshift -t 2500:2500

    redshift -O 2000  (FOR EVEN WARMMER COLORS, INCREASE TEH 2000 NUMBER)

    redshift -x (NORMAL RESET)

MANUAL BRIGHTNESS ON LINUX

    sudo apt install brightnessctl
    sudo brightnessctl set 50%

ULAUNCHER
	for debian like antix 
	sudo apt update && sudo apt install -y gnupg
gpg --keyserver keyserver.ubuntu.com --recv 0xfaf1020699503176
gpg --export 0xfaf1020699503176 | sudo tee /usr/share/keyrings/ulauncher-archive-keyring.gpg > /dev/null
echo "deb [signed-by=/usr/share/keyrings/ulauncher-archive-keyring.gpg] \
          http://ppa.launchpad.net/agornostal/ulauncher/ubuntu jammy main" \
          | sudo tee /etc/apt/sources.list.d/ulauncher-jammy.list
sudo apt update && sudo apt install ulauncher

	for ubuntu and mint 
	sudo add-apt-repository universe -y && sudo add-apt-repository ppa:agornostal/ulauncher -y && sudo apt update && sudo apt install ulauncher
	
	sudo apt update
	sudo apt install ulauncher

	launch it 
		ulauncher &
		
		change hotkey if crlt already exists for some other app like it does on antix

AUTO START BOOT UP SOUND
	mpv --no-video ~/Desktop/boot_sound.mp3
	(mpv is an audio/video opener like vlc)


LIST ALL DRIVES AND PARTITIONS
	sudo lsblk 
	OR
	sudo fdisk -l
	
FIX NTFS BITLOCKED FIXER FOR ANTIX (NOT WORKING YET)
	install dislocker and ntfs-3g
	sudo apt update
	sudo apt install dislocker ntfs-3g
		
	to list all drives
	lsblk
	
	You’ll need two directories: one where Dislocker will store the decrypted file and another where you’ll mount the NTFS filesystem.
	sudo mkdir -p /media/bitlocker
	sudo mkdir -p /media/mount
	(Explanation:sudo mkdir -p /media/bitlocker: Creates a directory called /media/bitlocker where Dislocker will place the decrypted virtual file. The -p flag ensures parent directories (/media) are created if they don’t exist.sudo mkdir -p /media/mount: Creates a directory called /media/mount where you’ll mount the NTFS filesystem for access.)
	
	unlock the drive with password
	sudo dislocker -r -V /dev/(nvme1n1p1 or what ever drive you want unlocked, see with lsblk) -u -- /media/bitlocker
	sudo dislocker -r -V /dev/nvme1n1p1 -u -- /media/bitlocker
	
	mount the decrypted drive 
	sudo mount -t ntfs-3g -o loop /media/bitlocker/dislocker-file /media/mount

What Does aptitude Do?
	sudo aptitude install (packagename)
	At its core, aptitude performs several key tasks:
	Package Installation
	Yes, aptitude does install packages along with their required dependencies. For example, if you run the command: sudo aptitude install <package>
	aptitude will download and install the specified package and automatically include any dependencies needed for it to function, assuming those dependencies aren’t already satisfied on your system.

	Dependency Management
	When installing a package, aptitude ensures all its dependencies are met. It checks the system for existing packages and, if necessary, installs additional ones to fulfill the requirements. This is similar to apt, but aptitude takes it a step further with enhanced dependency handling.

	Conflict and Dependency Resolution
	Where aptitude shines is in resolving complex dependency issues. Unlike apt, which might fail outright when it encounters a conflict or unmet dependency, aptitude actively proposes solutions. These solutions might include:
	Installing additional packages to meet dependency requirements.

	Downgrading packages to compatible versions if a newer version causes a conflict.

	Removing packages that conflict with the installation.

	Interactive Interface
	Beyond the command line, aptitude offers a curses-based interactive mode (launched by simply typing aptitude in the terminal). This lets you browse packages, view their dependencies, and manage them manually in a visual environment.

FIREFOX 
	APT REPOSITORY KEYS
	sudo install -d -m 0755 /etc/apt/keyrings

	import mozilla apt repo key
	wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null
	
	adding mozilla repo to sources
	echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
	
	configures to prioritize mozilla from this repo as opposed to the defualt repo that has olderr version of firefox
	echo '
Package: *
Pin: origin packages.mozilla.org
Pin-Priority: 1000
' | sudo tee /etc/apt/preferences.d/mozilla 

	updating pacakges and installing firefox 
	sudo apt-get update && sudo apt-get install firefox

creating ramdisk on debian based systems
	
	idk what this does but it's important so look it up, directory ramdisk
	sudo mkdir /tmp/ramdisk
	
	(Optional) let every user use the ramdisk (granting perfmission)
	sudo chmod 777 /tmp/ramdisk
	
	check how much ram you have with htop
	htop
	
	creating ramdisk size is set to 1 gb to set 10 gb size=10g yes g is standalone. 
	sudo mount -t tmpfs -o size=1024m myramdisk /tmp/ramdisk
	
	mount the created ram disk
	mount | tail -n 1

    test if this is created and mounted sucessfully 
    mount | grep /tmp/ramdisk
    or
    df -h /tmp/ramdisk
	
	unmount ramdisk
	sudo umount /tmp/ramdisk/

	test ram disk write speeds
    dd if=/dev/zero of=/mnt/myRamDisk/testfile bs=1M count=1024 conv=fdatasync

	test ram disk read speeds
	dd if=/mnt/myRamDisk/testfile of=/dev/null bs=1M
	
	auto mount of system boot
	sudo nano /etc/fstab
		add this	myramdisk  /tmp/ramdisk  tmpfs  defaults,size=1G,x-gvfs-show  0  0
	
	to mount it without reboot 
	sudo mount -a
	
GUI GITHUB RAMDISK 
	sudo apt install git
	git clone https://github.com/estarq/ramdisk
cd ramdisk
sudo python3 install.py
	
	to start
	sudo ramdisk help
	
	for firefox cache folder just go to about:config in the address bar on firefox
	and add this as a string
	browswer.cache.disk.parent_directory
	and name it /mnt/ramdisk (the directory of the ramdisk you created earlier)
		
	Doesn't work on: (WORKS ON ANTIX UBUNTU, MINT AND THE REST....)
	Debian, Devuan, Fedora, KaOS, PCLinuxOS, PureOS


SPOTIFY

    bash <(curl -sSL https://spotx-official.github.io/run.sh)


change refresh rate to 47 hz
    xrandr
    get your display name like mine is eDP-0 (it says conected right by it)
    
    cvt 1920 1080 47
    get your modeline for it and copy it ,Copy the entire modeline, starting from "1920x1080_47.00" to +vsync - mine is "1920x1080_47.00"  132.00  1920 2024 2224 2528  1080 1083 1088 1112 -hsync +vsync"

    xrandr --newmode "1920x1080_47.00"  132.00  1920 2024 2224 2528  1080 1083 1088 1112 -hsync +vsync
    
    xrandr --addmode eDP-1 "1920x1080_47.00"
    
    xrandr --output eDP-1 --mode "1920x1080_47.00"

        to create a bash file to autostart at boot :-
           
#!/bin/bash
xrandr --newmode "1920x1080_47.00"  132.00  1920 2024 2224 2528  1080 1083 1088 1112 -hsync +vsync
xrandr --addmode eDP-1 "1920x1080_47.00"
xrandr --output eDP-1 --mode "1920x1080_47.00"
    
        Save it as set_refresh_rate.sh in your home directory (e.g., /home/dusk/set_refresh_rate.sh)

        make it exicutable by 
        chmod +x ~/set_refresh_rate.sh


Clipboard - copyq
autoplay - gst (already installed) (tab for optional auto start audio options. gst-play-1.0)
file manager - nemo
side desktop task manager - conky
text editor in terminal - nano
list all disks - lsblk

linux mint cloudflaire

curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg

echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ noble main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list

sudo apt update && sudo apt install cloudflare-warp

warp-cli registration new
warp-cli connect/disconnect
warp-cli status


real time disk usage monitoring
install sysstat

    to see a specific disk 
    iostat -d 1 /dev/sda
