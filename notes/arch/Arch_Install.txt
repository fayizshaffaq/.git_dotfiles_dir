nvim /etc/fstab
nvim /etc/mkinitcpio.conf
nvim /etc/default/grub
nvim /boot/grub/grub.cfg


/boot/EFI/GRUB/grubx64.efi  

run these commands for security of packages you later install (might need internet for it though, if so do it after being connected)

pacman-key --init and pacman-key --populate archlinux
echo 60 | sudo tee /sys/class/power_supply/BAT1/charge_control_end_threshold

	for ssh
	server side	
	
systemctl start sshd.service
ip a
passwd

	clint side
ssh root@192.168.29.xxx
  
1.	BATTERY
	Battery limit 60

echo 60 | sudo tee /sys/class/power_supply/BAT1/charge_control_end_threshold

2.	Optional increase font size

setfont latarcyrheb-sun32

3.	KEYBOARD LAYOUT
	to set us or europian keyloud or anyother 

localectl list-keymaps | grep <your country, first see all listed>
	load us keyboard (standard)
loadkeys us	


4.	Verify Boot Mode: Ensure you've booted in UEFI mode.
	shoudl say 64 for uefi and 32 for bios
	
cat /sys/firmware/efi/fw_platform_size

	or (should list a bunch of files)

ls /sys/firmware/efi/efivars

5.	connect to the internet
	Enter the iwd interactive prompt
iwctl	

	Inside iwctl:

device list 

	Scan for networks (e.g., station wlan0 scan)

station <device_name> scan

	List available networks

station <device_name> get-networks

	Connect (e.g., station wlan0 connect "MyWiFiNetwork"). Enter password when prompted.

station <device_name> connect "<Your_SSID>"

exit
	check internet connectivity

ping -c 2 google.com

6.	Sync your system Clock; to find your zone (timedatectl list-timezones | grep Kolkata)

timedatectl set-timezone Asia/Kolkata

timedatectl set-ntp true

	check if correct time has been set by

timedatectl

7.	Partition your Disk

	Lists block devices (disks and partitions)

lsblk

	Use a partitioning tool (cfdisk is often considered user-friendly)

cfdisk /dev/xyz

	Select GPT as the label type

	You need two partition EFI(ESP) of 1G and root of over 20G, either have them be pre partitioned or you can partioon them through here.Type: Linux filesystem (Default) for the root partition if prompted. and the finalize the changes by writing them. 

	Check the new partition layout

lsblk /dev/xyz

	You should see something like /dev/nvme0n1p1 (ESP) and /dev/nvme0n1p2 (Root). Explanation: Divides the hard drive into sections for the operating system and boot files. An ESP is mandatory for UEFI booting.


8.	Format your your ESP partition as fat 32

mkfs.fat -F32 /dev/xy1

	Format the Root partition as btrfs -f flag for force in case if it was previously formated as a btrfs filesystem with filesystem on it that is no longer needed. but do it anyway even if it wasnn't cuz doesn't hurt.

mkfs.btrfs -f /dev/xy2


	SETTING UP SUBVOLUMES
	
8a.	Mount just the file system aka root parition. 

mount /dev/xyz /mnt

8b.	Create subvolumes @ and @home (@ is for root) and then ls/mnt to veryfy they've been created

btrfs subvolume create /mnt/@

btrfs subvolume create /mnt/@home	

ls /mnt

8c.	Now unmount the subvolumes from /mnt

umount -R /mnt

8d.	Now specificaly mount the @ (root) volume at /mnt with the temp flags -o for compressed installation of system and packages. 

mount -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvol=@ /dev/xyz /mnt

8e.	Now make a new home directory whithin /mnt/ to mount the @home subvolume and also create a new direcotry whithin /mnt/ for mounting the boot ESP partition and check with ls to see if they have  been created. 

mkdir /mnt/home

mkdir /mnt/boot

ls /mnt

8f.	Now mount the @home subvolume with compression zstd

mount -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvol=@home /dev/xyz /mnt/home

8g.	Now mount the boot directory in /mnt/boot (this should always be done AFTER main file system partiiton has been mounted to /mnt like @ and @home) and after the boot directory has been created. 

mount /dev/xyz /mnt/boot

	Explanation: Attaches the formatted partitions to the directory tree of the live environment, so the installer can write files to them. /mnt becomes the temporary root of the new system, and the ESP must be mounted at /mnt/boot for systemd-boot
	
	if you did all these steps, you can continues on from setting mirrors.
	
10.	Select Mirrors using reflector (automated)

reflector --country India --age 24 --sort rate --save /etc/pacman.d/mirrorlist

	optional (check if indian servers have been selected)

vim /etc/pacman.d/mirrorlist

11.	Install Essential Packages

pacstrap /mnt base base-devel linux linux-headers linux-firmware nvim

  	optional

pacstrap /mnt linux-zen linux-zen-headers
pacstrap /mnt linux-lts linux-lts-headers

	(If you only use wired Ethernet, systemd-networkd and systemd-resolved)

12.	Generate fstab: Create the file system table, which tells the system how to mount partitions on boot

genfstab -U -p /mnt >> /mnt/etc/fstab

13.	Chroot into the newly installed system and check edit fstab file

arch-chroot /mnt

	go into the fstab file and check if uuid is appprpriately assigned to root and esp and also add these extra words to the root partition line. like noatime, ssd and space_cache=v2 and also compression zstd, i've also listed what the default setup for arch intall sets it as. only add the words, don't remove anything else. or system wont boot.
	
	remove discard=async to utilize fstrim.timer and don't forget to later enable the 'systemctl enable fstrimltimer' , service. 

nvim /etc/fstab
	
NOTE THAT if you have subvolumes you need to do it to both subvolumes on the same parition like @ and also @home ie add zstd notime and remove discard=async

-----------------------
20a. OPTIONAL (SETUP ramdisk aka tmpfs)

	create a directory for mounting

mkdir /mnt/ramdisk
	
	edit the fstab file
	
nvim /etc/fstab
	
	check your uid and gid for the created user (userid and groupid) AND ADD TEH compress-force=zstd:3 flag to JUST THE HOME partition
	
id

	Add this line, replacing 1000 with your UID and GID (check with id):, tempfs doesn't support compress=zstd:3, so DON'T add it. uid and gid is usually 1000 but not always especially if there''re multiple users

tmpfs /mnt/ramdisk tmpfs rw,noatime,exec,size=60G,uid=1000,gid=1000,mode=0755,comment=x-gvfs-show 0 0


-------------------------------

//fstab default file reference
------------------------------
# <file system> <dir> <type> <options> <dump> <pass>
# /dev/nvme1n1p3
UUID=f4851bf6-418d-4ac6-aa50-252d2ec96d50	/         	btrfs     	rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@	0 0

# /dev/nvme1n1p3
UUID=f4851bf6-418d-4ac6-aa50-252d2ec96d50	/home     	btrfs     	rw,noatime,compress-force=zstd:3,ssd,space_cache=v2,subvol=/@home	0 0

# /dev/nvme1n1p2
UUID=54A1-9C73      	/boot     	vfat      	rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro	0 2

tmpfs /mnt/ramdisk tmpfs rw,noatime,exec,size=60G,uid=1000,gid=1000,mode=0755,comment=x-gvfs-show 0 0

---------------------------------
//end of reference.. 


14.	set time zone, this is by creating a symbolic link to asia/kolkata file ln s is for symbolic link(important for downlaoding packages)
	Replace Region/City (e.g., Asia/Kolkata) Find your zone in Find your zone in /usr/share/zoneinfo/

ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime

hwclock --systohc

15.	set your Language settings (Edit the locale definition file. Uncomment the locales you need (e.g., find en_US.UTF-8 UTF-8 and remove the leading #). Save and exit)

nvim /etc/locale.gen

	Generates the uncommented locales and sets the default system language.

locale-gen

	 Replace with your chosen locale (WITHOUT THE QUOTES, remove them)

echo "LANG=en_US.UTF-8" > /etc/locale.conf 

16.	Set Hostname
	Replace "your-hostname" with your desired computer name, this is not the same as username but could be set as the same if you so desire, include the quotation.

echo "your-hostname" > /etc/hostname

17.	Configure Hosts file (if this text doesn't already exist, you made a mistake with step 15)

nvim /etc/hosts

127.0.0.1   localhost
::1         localhost
127.0.1.1   your-hostname.localdomain <your-hostname> (your set hostname)

18.	SETTING USERS
	set Root Password

passwd

19.	Create a User Account: Do not use the root account for daily tasks

useradd -m -G wheel,input,audio,video,storage,optical,network,lp,power,games,rfkill <your_user_name>

	DONT' FORGET TO ADD YOUR CRETED USERNAME FOR PASSWORD OR IT'LL BE SET FOR ROOT

passwd <your_user_name>

	optional, only if you want to change something about the already created user, such as add him to another group. note: only add yourself to groups that have been created and installed, like in the case of ollama and docker and libvert  

usermod -aG ollama,docker,libvert <your_user_name>
	
	explination: wheel: The group name. By convention on Arch and many other systems, membership in the wheel group grants sudo privileges (once configured).
	
20.	Configure Sudo: Allow users in the wheel group to run commands as root

EDITOR=nvim visudo

	Find the line # %wheel ALL=(ALL:ALL) ALL and Uncomment it by removing the leading #:

%wheel ALL=(ALL:ALL) ALL

	save and exit

21.	Install Graphical Environment (Hyprland) & other essentials
	
	REFLECTOR SETUP
		first get the lastest mirrors for chroot environment

pacman -S reflector 

	edit the reflector file

nvim /etc/xdg/reflector/reflector.conf 

	add these flags in seperate lines and comment out other existing flags. 

--country India
--age 24
--sort rate
	
	run this (yes the whole thing)
	
reflector --country India --age 24 --sort rate --save /etc/pacman.d/mirrorlist
	
	this is in several steps is so that nothing goes wrong, everything is installed at once post download. so it's ideal to have it be done in installments. 
	
	1
	
pacman -S intel-media-driver mesa vulkan-intel mesa-utils intel-gpu-tools libva libva-utils vulkan-icd-loader vulkan-tools intel-ucode btrfs-progs zram-generator 

	2
	
pacman -S hyprland xorg-xwayland uwsm smartmontools qt5-wayland qt6-wayland xdg-desktop-portal-gtk gtk3 gtk4 nwg-look qt5ct qt6ct kvantum papirus-icon-theme hyprpolkitagent

	3
	
pacman -S crda xorg-xhost polkit xdg-desktop-portal-hyprland xdg-utils ttf-dejavu ttf-firacode-nerd noto-fonts noto-fonts-emoji ttf-font-awesome ttf-nerd-fonts-symbols

	4

pacman -S waybar libdbusmenu-qt5 libdbusmenu-glib wev fastfetch hyprlock hypridle hyprpaper hyprsunset swappy jq bc  wlr-randr python-pip python3

	5

pacman -S wofi playerctl brightnessctl vsftpd fwupd featherpad networkmanager nm-connection-editor compsize ncdu kitty pavucontrol

	6

pacman -S pipewire wireplumber pipewire-pulse pipewire-alsa easyeffects sof-firmware gst-plugin-pipewire bluez bluez-utils blueman dosfstools 

	7

pacman -S git wget curl xdg-user-dirs gvfs firewalld udisks2 udiskie qpwgraph tlp tlp-rdw thermald powertop lm_sensors 7zip usbutils usbmuxd gparted ntfs-3g acpid pacman-contrib turbostat nvtop btop inxi

	8

pacman -S ncdu eza tealdeer wikiman iotop iftop ethtool tmux  httrack filezilla s-tui meld handbrake cliphist grim slurp wl-clipboard tree fzf thunar swaync compsize logrotate lshw speedtest-cli arp-scan ffmpeg mpv firefox gnome-keyring libsecret yad yazi zellij zsh zsh-syntax-highlighting zsh-autosuggestions fzf starship poppler fd rq zoxide imagemagick ttf-jetbrains-mono-nerd bat lazygit socat swww inotify-tools sassc file obsidian krita unzip

	9

pacman -S tesseract #and then choose tesseract-data-eng.(30th usually)


gnome-disk-utility dysk docker-buildx uv docker docker-compose mission-center baobab stress-ng yt-dlp man-db man-pages openssh sddm


22.	NVIDIA DRIVERS
	downlaod them if you if you have nvidia

pacman -S nvidia-dkms nvidia-utils nvidia-settings opencl-nvidia libva-nvidia-driver nvidia-prime egl-wayland

--------------
theming: everforest, gruvbox-dark-gtk everforest-gtk-theme-git nordic-darker-theme bibata-cursor-theme


	OTHER Stuff
power-profiles-daemon is a replacement for tlp but it's not as customizable.
sysstat dunst (alternative for mako) alternative for hyprpaper tldr (ALTERNTIVE FOR tealdeer) libinput-gestures supergfxctl asusctltray grimblast tumbler kate iwd doublecmd-qt5  obs-studio audacity krita
-------------------

23.	INITRAMFS EDIT THE MKINITCPIO FILE
	
	(Part 1)
	
	To generate initial ramdisk for kernal to be able to read ssd and other essential stuff (it's a small linux environnment that runs drivers for disks, this is how kernal is able to read the filesystem files on root direcotry)
	
	first edit this file by adding the following
	
nvim /etc/mkinitcpio.conf
	
	all these are already uncommented modules, binary and hooks. 
	
	add btrfs inside MODULES=(btrfs)

MODULES=(btrfs)

	add /usr/bin/btrfs inside binary

BINARIES=(/usr/bin/btrfs)

	add encrypt inside hooks if you have an encrypted drive (THE ORDER MATTERS IT'S SEQUENTUAL)

HOOKS=(base udev autodetect microcode modconf keyboard keymap consolefont block encrypt filesystems fsck)


	
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX REFERENCE XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

MODULES=(btrfs)

BINARIES=(/usr/bin/btrfs)

FILES=()

HOOKS=(base udev autodetect microcode modconf keyboard keymap consolefont block filesystems fsck)

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


24.	MKINITCPIO, generate the entires for boot order.
	
	(PART 2)

	Now make the mkinitcpio file (two menthods)

	this method creates it for all kernals installed (recommanded)

mkinitcpio -P

	this method creates it for kernals individiually specified, the diffrenct in flags is the captilaiztion of the letter -p -P

mkinitcpio -p linux

mkinitcpio -p linux-lts


25.	GRUB
	
	Install necessary packages 

pacman -S grub efibootmgr grub-btrfs
	
	if dual booting isntall os-probar aswell.

pacman -S os-prober 

26.	ADD ACTIVE STATE POWER MANAGEMENT,USBCORE.AUTOSUSPEND=-1, and Change the loglevel=7 while also removing the quiet Configure GRUB Defaults (/etc/default/grub):

nvim /etc/default/grub

GRUB_CMDLINE_LINUX_DEFAULT="loglevel=7 pcie_aspm=force usbcore.autosuspend=-1"

  optional, also add mitigations=off to check perfomrmance with it and without it. 

	NOTE:pcie_aspm=force enables ASPM, even on devices that do not support ASPM 
	If you forcibly enable ASPM by using pcie_aspm=force on hardware that does not support ASPM, the system might become unresponsive. Before setting pcie_aspm=force, ensure that all PCIe hardware on the system supports ASPM. 
  adding usbcore.autosuspend=-1 help with mitigating so many boot errors bluetooth, nvidia and others, aspm is overzealous with powersavings. 

27.	os prober config ONLY if os-prober is instlaled.

nvim /etc/default/grub

	Enable OS Prober: Find the line #GRUB_DISABLE_OS_PROBER=false. Uncomment it by removing the leading #. If the line doesn't exist or is set to true, change it or add:

GRUB_DISABLE_OS_PROBER=false
	

28.	Install GRUB Bootloader Files to ESP:

	Run the grub-install command. Use /boot as the --efi-directory because your ESP (/dev/sda1) is mounted at /mnt/boot (which becomes /boot inside the chroot). GRUB is a common, good identifier. Again, make sur to point to the appropriate path for --efi-directory=/boot it coudl be either /boot or /EFI or /boot/EFI  or where ever else you mounted the fat32 boot partition. 

grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB --recheck

	EXPLINATION:-
	--target=x86_64-efi: Specifies UEFI installation.
	--efi-directory=/boot: Tells GRUB where the root of the ESP is mounted within the chroot. Crucial correction.
	--bootloader-id=GRUB: Names the entry in the UEFI boot menu and the directory within /boot/EFI/.
	--recheck: Helps ensure device detection is accurate.

	Verify: Check if the GRUB EFI file was created:

ls /boot/EFI/GRUB/grubx64.efi

29.	Generate the GRUB Configuration File:
	This command reads /etc/default/grub, detects kernels (including microcode), runs os-prober (if enabled), and creates /boot/grub/grub.cfg.

grub-mkconfig -o /boot/grub/grub.cfg
	
	Verify: Look at the output of the command. It should list found Linux kernels (often with fallback entries) and potentially other operating systems like "Windows Boot Manager". If it mentions errors or doesn't find your Arch kernel or Windows, troubleshoot based on the messages. You can also inspect the generated file: less /boot/grub/grub.cfg.
	
30.	SKIP THIS STEP (NOT NEEDED) Check /boot/grub/grub.cfg and check it's order for microcode and stuff (microccode before intraram)

nvim /etc/mkinitcpio.conf
	
31.	BATTERY LIMITER TO 60%
	this is persistant

sudo nvim /etc/systemd/system/bat.service

	save this in the newly created nvim file
	
[Unit]
Description=Set Battery Charge Threshold for BAT1 to 60%
After=multi-user.target
StartLimitBurst=0

[Service]
Type=oneshot
Restart=on-failure
ExecStart=/bin/bash -c 'echo 60 > /sys/class/power_supply/BAT1/charge_control_end_threshold'

[Install]
WantedBy=multi-user.target



32.	SETTING ZRAM

	Create the configuration file:

sudo nvim /etc/systemd/zram-generator.conf

	set this as config

[zram0]
zram-size = 12768
compression-algorithm = zstd

	THIS IS ONLY IF YOU'RE ALREADY BOOTED IN AND CONFIGURRING IT, NOT NEEDED FROM CHROOT. 	

	reload systemd deamons from disk to ram (do reload only if already booted, continues with the rest in both casses ie booted or chroot)
sudo systemctl daemon-reload
	restart the zram unit/ service.
sudo systemctl restart systemd-zram-setup@zram0.service
	check the services status.
sudo systemctl status systemd-zram-setup@zram0.service
	if it fails, the text in the config needs to be rewritten and all then deamon reloaded and service restart and status check. all over agian. the config needs to be pefect. sometimes manually writting it is better. 


33.	services to enable

	systemctl enable for all of these

systemctl enable tlp.service udisks2.service thermald.service bluetooth.service smartd.service firewalld.service systemd-timesyncd.service acpid.service fstrim.timer vsftpd.service NetworkManager.service 

systemctl enable bat.service

	Services to enable for the each user on the same pc. these are user specific servcies with --user flag, do these from chroot as well. 

systemctl --user enable pipewire.socket pipewire-pulse.socket wireplumber.service hypridle.service


dont run as root for the user service
systemctl enable --now --user libinput-gestures.service


	likly not installed but if instlald, enable them aswell
plexmediaserver.service tumbler.service reflector.service reflector.timer geoclue.service iwd.service man-db.timer sddm.service usbmuxd.service sshd.service 
avahi-daemon.service 

34.	for reflector 
To Enable Periodic Updates: sudo systemctl  (You'll need to configure /etc/xdg/reflector/reflector.conf first)

	for sysstat
System performance monitoring tools (sar, iostat). Service: sysstat.service and associated timers (sysstat-collect.timer, sysstat-summary.timer) for data collection

You can use sudo powertop --auto-tune to apply its suggestions on boot via a custom service if desired, but this is often handled by TLP.


36. Exit

exit

37.	Unmount Partitions (watch the spelling)

umount -R /mnt


38.	POST INSTALL AFTER BOOTING (because paru and yay shoudln't be installed with root privilages)
--------
	(paru install )
git clone https://aur.archlinux.org/paru.git
cd paru
makepkg -si
-------
		OR
-------
	(yay install )
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
-------

39.	(install with paru or yay)
	PARU

paru -S wlogout  acpi_call tlpui qtodotxt2-git pscircle adwaita-qt6 adwaita-qt5 nordic-theme pacseek jdownloader2 otf-atkinson-hyperlegible-next waypaper

paru -S wdpass resvg cloudflare-warp-nox-bin lazydocker asusctl miniconda3 envycontrol (out of date) 

40.	enable services.
sudo systemctl enable --now fwupd.service warp-svc.service asusd.service 

systemctl --user enable --now hyprpolkitagent.service


	FOR TLP TO WORK PROPERTLY WITH WIFI POWER SAVING, MAKS THESE

sudo systemctl mask systemd-rfkill.service
sudo systemctl mask systemd-rfkill.socket



-------
hyprland autostart

To Autostart: Add exec-once = udiskie & to your ~/.config/hypr/hyprland.conf
Add exec-once = wl-paste --watch cliphist store to your hyprland.conf




Autostart Items for Hyprland (in your ~/.config/hypr/hyprland.conf)

Some applications are not systemd services but need to be started when Hyprland starts. You'll add lines like these to your hyprland.conf:

    Notification Daemon: exec-once = dunst
    Wallpaper (example, you'll need a wallpaper tool like hyprpaper, swaybg, or feh via Xwayland): # exec-once = hyprpaper (if you install and configure hyprpaper)
    Bar (example, if you install something like waybar): # exec-once = waybar
    Keyboard Layout / Input Method (if needed): Configure these according to Hyprland's documentation (e.g., input { kb_layout = us,de }).
    XDG User Dirs (to ensure they are created if not already): exec-once = xdg-user-dirs-update




	from live os , after booting into installed os  to see all services. 
systemctl list-units --all --type=service
-------------------


