#!/binf/sh
#
# Universal Wayland Session Manager (UWSM) - General Environment
#
# This file delineates general environment variables for the Wayland session.
# These settings pertain to application toolkits, hardware acceleration,
# and default user applications. They are sourced by UWSM upon session initialization.
#
# To verify that these variables have been correctly exported to your session,
# execute `env` within a terminal emulator.

#--------------------------------------------------------------------------------
# 1. System Locale and Performance
#--------------------------------------------------------------------------------

# Specifies the language, country, and character encoding for all applications.
# It is critical for correct text rendering, sorting, and date/time formatting.
export LANG=en_US.UTF-8

# --- OpenMP Performance Tuning ---
# Instructs OpenMP-aware applications (common in scientific computing, compression,
# and multimedia) to utilize a number of threads that matches your CPU's total
# thread count. Your Intel Core i7-12700H has 8 P-cores (16 threads) and 4 E-cores,
# totaling 20 threads. This can significantly improve performance in parallel workloads.
export OMP_NUM_THREADS=20

#--------------------------------------------------------------------------------
# 2. GUI Toolkit Configuration (Qt & GTK)
#--------------------------------------------------------------------------------

# --- Qt Configuration (KDE, etc.) ---

# Instructs Qt5/Qt6 applications to prioritize the native Wayland backend.
# `xcb` is provided as a fallback, ensuring compatibility via XWayland for
# applications that do not yet fully support Wayland.
# NOTE: The separator is a colon ':', not a semicolon ';'.
export QT_QPA_PLATFORM="wayland:xcb"

# Sets the theme for Qt applications. `qt5ct` and `qt6ct` are common utilities
# for configuring Qt appearance outside of the KDE Plasma desktop.
export QT_QPA_PLATFORMTHEME=qt6ct
# export QT_QPA_PLATFORMTHEME=qt5ct # Uncomment if you use qt5ct instead for Qt5 apps.

# Prevents Qt applications from rendering their own window decorations (title bars,
# borders), allowing the Wayland compositor (Hyprland) to manage them exclusively.
# This is paramount for a consistent and integrated look and feel.
export QT_WAYLAND_DISABLE_WINDOWDECORATION=1

# Allows Qt to automatically scale applications based on screen DPI.
# Set to 1 to enable. This is often preferable to manual scaling.
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# --- GTK Configuration (GNOME, XFCE, etc.) ---

# Instructs GTK applications to prioritize the native Wayland backend.
# `x11` is provided as a fallback for compatibility via XWayland.
export GDK_BACKEND="wayland,x11"

# The GTK theme should ideally be managed by a dedicated utility like `nwg-look`
# or by setting gsettings schemas, as this provides more reliable and granular control.
# Setting it here can sometimes be overridden or lead to inconsistencies.
# export GTK_THEME=Adwaita-dark

export QT_QUICK_CONTROLS_STYLE=Fusion

#--------------------------------------------------------------------------------
# 3. Cursor and Default Applications
#--------------------------------------------------------------------------------

# Defines the default cursor theme for applications, primarily those running on XWayland.
export XCURSOR_THEME=Papirus-Dark
# Defines the default cursor size for applications, primarily those running on XWayland.
export XCURSOR_SIZE=24

# Sets the default terminal emulator to be launched by other applications.
export TERMINAL=kitty
# Sets the default text editor for terminal-based sessions.
export EDITOR=nvim
# Sets the default web browser.
export BROWSER=firefox

#--------------------------------------------------------------------------------
# 4. Application-Specific Wayland Flags
#--------------------------------------------------------------------------------

# Forces Mozilla applications (Firefox, Thunderbird) to run natively in Wayland mode.
# This is essential for proper scaling, performance, and integration.
export MOZ_ENABLE_WAYLAND=1
# A potential fix for rendering issues, though generally enabled by default now.
# Uncomment only if experiencing graphical artifacts in Firefox.
# export MOZ_WEBRENDER=1

# Forces SDL2-based applications (many games and emulators) to use the Wayland video driver.
export SDL_VIDEODRIVER=wayland

# Forces Clutter-based applications to use the Wayland backend.
export CLUTTER_BACKEND=wayland

# Instructs Electron-based applications (VSCode, Discord, etc.) to auto-detect
# the appropriate rendering backend. On a Wayland session, this should select Wayland.
# This is the modern and preferred method for Electron apps.
export ELECTRON_OZONE_PLATFORM_HINT=auto

# A crucial variable for preventing graphical glitches and display issues with
# older Java Swing/AWT applications in non-reparenting window managers like Hyprland.
export _JAVA_AWT_WM_NONREPARENTING=1

#--------------------------------------------------------------------------------
# 5. Hardware Acceleration & GPU Configuration
#--------------------------------------------------------------------------------
#
# This section is of paramount importance for your Intel + NVIDIA hybrid graphics setup.
# The strategy is to use the power-efficient Intel iGPU for the desktop and general
# applications, while enabling the high-performance NVIDIA dGPU for demanding tasks
# (e.g., gaming, 3D rendering) via PRIME Render Offload.

# --- VA-API (Video Acceleration API for Intel & NVIDIA) ---
# Specifies the driver for VA-API hardware video acceleration (decoding/encoding).
# For your 12th Gen Intel CPU, `iHD` is the correct modern driver.
# Using the iGPU for video decoding is typically more power-efficient.
#export LIBVA_DRIVER_NAME=iHD

# The following line is for using the nvidia-vaapi-driver. It directly CONFLICTS
# with the Intel driver above. Do not uncomment both. Only use this if you
# have a specific reason to force video decoding on the dGPU.
# export LIBVA_DRIVER_NAME=nvidia

# --- Vulkan ICD Loader ---
# For a hybrid graphics system, you should NOT set this variable globally.
# Doing so would restrict all Vulkan applications to a single GPU, defeating the
# purpose of PRIME offloading. Let the Vulkan loader detect both drivers.
# # export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/intel_icd.x86_64.json

# --- NVIDIA PRIME Render Offload & Driver Settings ---
# These variables are essential for making the NVIDIA dGPU available on demand.

# Enables PRIME Render Offload, allowing you to run specific applications
# on the NVIDIA GPU while the desktop session runs on the Intel iGPU.
#export __NV_PRIME_RENDER_OFFLOAD=1

# Specifies the NVIDIA driver as the vendor library for GLX-based applications
# when offloading. This is necessary for compatibility with many games and apps.
#export __GLX_VENDOR_LIBRARY_NAME=nvidia

# A common workaround for cursor glitches (disappearance, artifacts) when using
# the proprietary NVIDIA driver. Uncomment if you experience such issues.
# export WLR_NO_HARDWARE_CURSORS=1

# The GBM (Generic Buffer Management) backend to use. The proprietary NVIDIA driver
# provides its own. This is often required for Wayland compositors.
#export GBM_BACKEND=nvidia-drm

# This can force the NVIDIA GPU to be used for Vulkan applications. It's generally
# better to use `prime-run vkcube` or other explicit launch commands for control.
# Uncommenting this may cause all Vulkan apps to use the dGPU, increasing power draw.
# export __VK_LAYER_NV_optimus=NVIDIA_only

# Enables a disk cache for compiled GL shaders. This is highly recommended as it
# can drastically reduce stuttering and improve load times in games.
# export __GL_SHADER_DISK_CACHE=1
# export __GL_SHADER_DISK_CACHE_PATH=$HOME/.cache/nv/

#EXTRA STUFF NOT SURE IF THEY WORK
#wlroot is no longer relied upon by hyprland, use aquamarine in the hyprland specific env file to achienve teh same effect, since aquamarine has replaced wlroots and is the defacto drm engine since hyprland 42
#export WLR_DRM_DEVICES=/dev/dri/card1 #(this is to force intel gpu CHECK which card BEFORE UNCOMMENTING (intel is card1 and nvidia is card 2 for me might be diffrent for you))
# In hyprland.conf or UWSM env file

#export __GL_VRR_ALLOWED=0 # Set to 0 if you have issues with Adaptive Sync in games
#export NVD_BACKEND=direct # May be needed for nvidia-vaapi-driver with some apps
#export QT_STYLE_OVERRIDE = #override theme systemwide
